.pc = $1000 "SM EFFECT DEFINITION"
SM_OFFSETS: //x offset of each statemachine (sets initial start location and then updated per frame)
.byte $27,$26,$25,$24,$23,$22
.byte $27,$26,$25,$24,$23,$22
.byte $27,$26,$25,$24,$23,$22
.byte $27,$26,$25,$24,$23,$22
.byte $27,$26,$25,$24,$23,$22
.byte $27,$26,$25,$24,$23,$22
.byte $27,$26,$25,$24,$23,$22
.byte $27,$26,$25,$24,$23,$22
.byte $27,$26,$25,$24,$23,$22
.byte $27,$26,$25,$24,$23,$22
.byte $27,$26,$25,$24,$23,$22
.byte $27,$26,$25,$24,$23,$22
.byte $27,$26,$25,$24,$23,$22
.byte $27,$26,$25,$24,$23,$22
.byte $27,$26,$25,$24,$23,$22
.byte $27,$26,$25,$24,$23,$22
.byte $27,$26,$25,$24,$23,$22
.byte $27,$26,$25,$24,$23,$22
.byte $27,$26,$25,$24,$23,$22
.byte $27,$26,$25,$24,$23,$22
.byte $27,$26,$25,$24,$23,$22
.byte $27,$26,$25,$24,$23,$22
.byte $27,$26,$25,$24,$23,$22
.byte $27,$26,$25,$24,$23,$22
.byte $27,$26,$25,$24,$23,$22

.align $100
SM_STEPS: //number of steps the sm should do before it dies
.byte $07,$07,$07,$07,$06,$06
.byte $07,$07,$07,$07,$06,$06
.byte $07,$07,$07,$07,$06,$06
.byte $07,$07,$07,$07,$06,$06
.byte $07,$07,$07,$07,$06,$06
.byte $07,$07,$07,$07,$06,$06
.byte $07,$07,$07,$07,$06,$06
.byte $07,$07,$07,$07,$06,$06
.byte $07,$07,$07,$07,$06,$06
.byte $07,$07,$07,$07,$06,$06
.byte $07,$07,$07,$07,$06,$06
.byte $07,$07,$07,$07,$06,$06
.byte $07,$07,$07,$07,$06,$06
.byte $07,$07,$07,$07,$06,$06
.byte $07,$07,$07,$07,$06,$06
.byte $07,$07,$07,$07,$06,$06
.byte $07,$07,$07,$07,$06,$06
.byte $07,$07,$07,$07,$06,$06
.byte $07,$07,$07,$07,$06,$06
.byte $07,$07,$07,$07,$06,$06
.byte $07,$07,$07,$07,$06,$06
.byte $07,$07,$07,$07,$06,$06
.byte $07,$07,$07,$07,$06,$06
.byte $07,$07,$07,$07,$06,$06
.byte $07,$07,$07,$07,$06,$06

.align $100
SM_DELTAS: //distance deltas of each state machine - high bit is subtraction
.byte $86,$86,$86,$86,$86,$86
.byte $86,$86,$86,$86,$86,$86
.byte $86,$86,$86,$86,$86,$86
.byte $86,$86,$86,$86,$86,$86
.byte $86,$86,$86,$86,$86,$86
.byte $86,$86,$86,$86,$86,$86
.byte $86,$86,$86,$86,$86,$86
.byte $86,$86,$86,$86,$86,$86
.byte $86,$86,$86,$86,$86,$86
.byte $86,$86,$86,$86,$86,$86
.byte $86,$86,$86,$86,$86,$86
.byte $86,$86,$86,$86,$86,$86
.byte $86,$86,$86,$86,$86,$86
.byte $86,$86,$86,$86,$86,$86
.byte $86,$86,$86,$86,$86,$86
.byte $86,$86,$86,$86,$86,$86
.byte $86,$86,$86,$86,$86,$86
.byte $86,$86,$86,$86,$86,$86
.byte $86,$86,$86,$86,$86,$86
.byte $86,$86,$86,$86,$86,$86
.byte $86,$86,$86,$86,$86,$86
.byte $86,$86,$86,$86,$86,$86
.byte $86,$86,$86,$86,$86,$86
.byte $86,$86,$86,$86,$86,$86
.byte $86,$86,$86,$86,$86,$86

.align $100
SM_DELAYS: //initial frame delays for each state machine
.byte $81,$83,$85,$87,$89,$8b
.byte $85,$87,$89,$8b,$8d,$8f
.byte $89,$8b,$8d,$8f,$91,$93
.byte $8d,$8f,$91,$93,$95,$97
.byte $91,$93,$95,$97,$99,$9b
.byte $95,$97,$99,$9b,$9d,$9f
.byte $99,$9b,$9d,$9f,$a1,$a3
.byte $9d,$9f,$a1,$a3,$a5,$a7
.byte $a1,$a3,$a5,$a7,$a9,$ab
.byte $a5,$a7,$a9,$ab,$ad,$af
.byte $a9,$ab,$ad,$af,$b1,$b3
.byte $ad,$af,$b1,$b3,$b5,$b7
.byte $b1,$b3,$b5,$b7,$b9,$bb
.byte $b5,$b7,$b9,$bb,$bd,$bf
.byte $b9,$bb,$bd,$bf,$c1,$c3
.byte $bd,$bf,$c1,$c3,$c5,$c7
.byte $c1,$c3,$c5,$c7,$c9,$cb
.byte $c5,$c7,$c9,$cb,$cd,$cf
.byte $c9,$cb,$cd,$cf,$d1,$d3
.byte $cd,$cf,$d1,$d3,$d5,$d7
.byte $d1,$d3,$d5,$d7,$d9,$db
.byte $d5,$d7,$d9,$db,$dd,$df
.byte $d9,$db,$dd,$df,$e1,$e3
.byte $dd,$df,$e1,$e3,$e5,$e7
.byte $e1,$e3,$e5,$e7,$e9,$eb
